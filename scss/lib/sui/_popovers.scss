// POPOVERS
// --------

/////////////////////////////////////////////////////
// Shared by Sui and Legacy Popovers
/////////////////////////////////////////////////////

$popoverArrowWidth:       10px;
$popoverArrowColor:       #fff;

%shared-popover-content-styles { // Used by .popover and .sui-popover_content
  display: none;
  position: absolute;
  z-index: $zindexPopover;

  min-width:250px;
  padding: 0px;

  background-color:$contentFill;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding;
  background-clip: padding-box;
  border: 1px solid $borderColor;
  @include border-radius(3px);
  @include box-shadow(0 5px 10px rgba(0,0,0,.2));
}

%shared-popover-title-styles {
  margin: 0; // reset heading margin
  padding: 2px 8px;
  font-weight: normal;
  line-height: 18px;
  background-color: $titleFill;
  border-bottom: 1px solid $titleBorder;
  @include border-radius(2px 2px 0 0);

  &:empty {
    display: none;
  }

  .close {
    margin-top:5px;
  }
}

%shared-popover-content-body-styles { // Used by .popover-content and .sui-popover_content-body
  padding: 9px 14px;
}

%shared-popover-footer-styles {
  background-color: $titleFill;
  padding: 2px 8px;
  @include border-radius(0 0 2px 2px);

  &:empty {
    display: none;
  }
}


/////////////////////////////////////////////////////
// Sui Popover
/////////////////////////////////////////////////////
.sui-popover {
  display: inline-block;  // limit the width so the content-centering works properly by default
}

.sui-popover_trigger {
  display: inline-block;  // limit the width so the content-centering works properly by default
  cursor: pointer;

  .caret {
    margin-top: 7px;
  }

  .sui-popover[disabled] & {
    color: $buttonBorder;
    cursor: not-allowed;

    &.sui-bttn:hover {
      @include gradient-vertical($buttonTopGradient, $buttonBottomGradient);
      @include ms-gradient-vertical($buttonTopGradient, $buttonBottomGradient);
    }

    &.sui-bttn:active {
      box-shadow: none;
    }
  }
}

.sui-popover_anchor {
  display: inline-block;  // limit the width so the content-centering works properly by default
}

@mixin sui-popover-arrow($contentPosition) {
  // 'before' - the background triangle, used for outline
  // 'after'  - the foreground triangle, the one you mostly see

  &.sui-popover_content--align-left {
    &:before,
    &:after {
      left: 10px;
      margin-left: 0;
    }
  }

  &.sui-popover_content--align-right {
    &:before,
    &:after {
      left: auto;
      right: 10px;
      margin-left: 0;
    }
  }

  &.sui-popover_content--align-top {
    &:before,
    &:after {
      top: 10px;
      margin-top: 0;
    }
  }

  &.sui-popover_content--align-bottom {
    &:before,
    &:after {
      top: auto;
      bottom: 10px;
      margin-top: 0;
    }
  }

  &:before,
  &:after {
    position: absolute;
    content: " ";

    width: 0;
    height: 0;

    border: 1px solid transparent;

    @if $contentPosition == 'top' or $contentPosition == 'bottom' {
      left: 50%;
      margin-left: -$popoverArrowWidth;
      border-left-width: $popoverArrowWidth;
      border-right-width: $popoverArrowWidth;
    } @else {
      top: 50%;
      margin-top: -$popoverArrowWidth;
      border-top-width: $popoverArrowWidth;
      border-bottom-width: $popoverArrowWidth;
    }
  }

  &:before {
    @if $contentPosition == 'top' {
      bottom: -($popoverArrowWidth+2);
    } @else if $contentPosition == 'bottom' {
      top: -($popoverArrowWidth+2);
    } @else if $contentPosition == 'left' {
      right: -($popoverArrowWidth+2);
    } @else {
      left: -($popoverArrowWidth+2);
    }

    border-#{$contentPosition}: $popoverArrowWidth solid $borderColor;
  }

  &:after {
    @if $contentPosition == 'top' {
      bottom: -($popoverArrowWidth+1);
    } @else if $contentPosition == 'bottom' {
      top: -($popoverArrowWidth+1);
    } @else if $contentPosition == 'left' {
      right: -($popoverArrowWidth+1);
    }
    @else {
      left: -($popoverArrowWidth+1);
    }

    border-#{$contentPosition}: $popoverArrowWidth solid $popoverArrowColor;
  }
}


.sui-popover_content {
  @extend %shared-popover-content-styles;

  &.is-shown { display: block; }

  &.sui-popover_content--top {
    @include sui-popover-arrow('top');
  }

  &.sui-popover_content--right {
    @include sui-popover-arrow('right');
  }

  &.sui-popover_content--bottom {
    @include sui-popover-arrow('bottom');
  }

  &.sui-popover_content--left {
    @include sui-popover-arrow('left');
  }

}

.sui-popover_title {
  @extend %shared-popover-title-styles;
}

.sui-popover_content-body {
  @extend %shared-popover-content-body-styles;
}

.sui-popover_footer {
  @extend %shared-popover-footer-styles;
}


/////////////////////////////////////////////////////
// Legacy Popover
/////////////////////////////////////////////////////

$popoverArrowOuterWidth:  $popoverArrowWidth + 1;

.popover {
  @extend %shared-popover-content-styles;

  top: 0;
  left: 0;
  text-align: left; // Reset given new insertion method
  white-space: normal; // Overrides for proper insertion

  // Offset the popover to account for the popover arrow
  &.top     { margin-top: -$popoverArrowWidth; }
  &.right   { margin-left: $popoverArrowWidth; }
  &.bottom  { margin-top: $popoverArrowWidth; }
  &.left    { margin-left: -$popoverArrowWidth; }
}

.popover-title {
  @extend %shared-popover-title-styles
}

.popover-footer {
  @extend %shared-popover-footer-styles;
}

.popover-close {
  margin: 8px 10px 10px 10px;
  font-weight: normal;
  float:right;
  display:inline-block;

  h3 {
    display: none;
  }

  .close {
  }
}

.popover-content {
  @extend %shared-popover-content-body-styles;

  p, ul, ol {
    margin-bottom: 0;
  }
}

// Arrows
//
// .arrow is outer, .arrow:after is inner
.popover .arrow,
.popover .arrow:after {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}
.popover .arrow {
  border-width: 11px;
}
.popover .arrow:after {
  border-width: 10px;
  content: "";
}

.popover {
  &.top > .arrow {
    left: 50%;
    margin-left: -$popoverArrowOuterWidth;
    border-bottom-width: 0;
    border-top-color: $borderColor;
    bottom: -$popoverArrowOuterWidth;
    &:after {
      bottom: 1px;
      margin-left: -$popoverArrowWidth;
      border-bottom-width: 0;
      border-top-color: $popoverArrowColor;
    }
  }
  &.right > .arrow {
    top: 50%;
    left: -$popoverArrowOuterWidth;
    margin-top: -$popoverArrowOuterWidth;
    border-left-width: 0;
    border-right-color: $borderColor;
    &:after {
      left: 1px;
      bottom: -$popoverArrowWidth;
      border-left-width: 0;
      border-right-color: $popoverArrowColor;
    }
  }
  &.bottom > .arrow {
    left: 50%;
    margin-left: -$popoverArrowOuterWidth;
    border-top-width: 0;
    border-bottom-color: $borderColor;
    top: -$popoverArrowOuterWidth;
    &:after {
      top: 1px;
      margin-left: -$popoverArrowWidth;
      border-top-width: 0;
      border-bottom-color: $popoverArrowColor;
    }
  }

  &.left > .arrow {
    top: 50%;
    right: -$popoverArrowOuterWidth;
    margin-top: -$popoverArrowOuterWidth;
    border-right-width: 0;
    border-left-color: $borderColor;
    &:after {
      right: 1px;
      border-right-width: 0;
      border-left-color: $popoverArrowColor;
      bottom: -$popoverArrowWidth;
    }
  }

}
